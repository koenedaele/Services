<?xml version="1.0" ?>
<project name="Services" default="main" basedir=".">

	<property file="${project.basedir}/build.properties" />

	<!-- Default values voor properties -->
	<property name="crab.user" value="USER" />
	<property name="crab.password" value="PWD" />
	<property name="crab.run_integration_tests" value="0" />
	<property name="crab.proxy_host" value="" />
	<property name="crab.proxy_port" value="" />
	<property name="capakey.user" value="USER" />
	<property name="capakey.password" value="PWD" />
	<property name="capakey.run_integration_tests" value="0" />
	<property name="capakey.proxy_host" value="" />
	<property name="capakey.proxy_port" value="" />

	<target name="main" description="Overzicht van de mogelijke taken">
		<echo msg="U kunt volgende taken uitvoeren:" />
		<echo msg=" docs: Maak de API-documentatie aan." />
	</target>

	<target name="createBuildDir">
		<available file="build" property="build.build_dir_exists" />
		<if>
			<not>
				<isset property="build.build_dir_exists" />
			</not>
			<then>
				<echo>Build dir wordt aangemaakt.</echo>
				<mkdir dir="build" />
			</then>
		</if>
		<available file="build/reports" type="dir" property="build.reports_dir_exists" />
		<if>
			<not>
				<isset property="build.reports_dir_exists" />
			</not>
			<then>
				<echo>build/reports dir wordt aangemaakt.</echo>
				<mkdir dir="build/reports" />
			</then>
		</if>
		<available file="build/docs" type="dir" property="build.docs_dir_exists" />
		<if>
			<not>
				<isset property="build.docs_dir_exists" />
			</not>
			<then>
				<echo>build/docs dir wordt aangemaakt.</echo>
				<mkdir dir="build/docs" />
			</then>
		</if>
	</target>

	<target name="genBootstrap">
		<copy file="test/dev/phpunit.xml" tofile="test/phpunit.xml" overwrite="true">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="CRAB_USER" value="${crab.user}" />
					<token key="CRAB_PASSWORD" value="${crab.password}" />
					<token key="CRAB_RUN_INTEGRATION_TESTS" value="${crab.run_integration_tests}" />
					<token key="CRAB_PROXY_HOST" value="${crab.proxy_host}" />
					<token key="CRAB_PROXY_PORT" value="${crab.proxy_port}" />
					<token key="CAPAKEY_USER" value="${capakey.user}" />
					<token key="CAPAKEY_PASSWORD" value="${capakey.password}" />
					<token key="CAPAKEY_RUN_INTEGRATION_TESTS" value="${capakey.run_integration_tests}" />
					<token key="CAPAKEY_PROXY_HOST" value="${capakey.proxy_host}" />
					<token key="CAPAKEY_PROXY_PORT" value="${capakey.proxy_port}" />
				</replacetokens>
			</filterchain>
		</copy>
	</target>

	<target name="runTests" description="Laat de Unit Tests lopen." depends="createBuildDir,genBootstrap">
		<exec command="phpunit --configuration test/phpunit.xml"
			  passthru="true" returnProperty="testsExit" />
		<if>
			<equals arg1="${testsExit}" arg2="0" />
			<then>
				<echo>Unit tests werden met success uitgevoerd.</echo>
			</then>
			<else>
				<echo>Niet alle unit tests werden succesvol uitgevoerd!</echo>
			</else>
		</if>
	</target>


	<target name="genTestReports" description="Maak rapporten over de UnitTests aan." depends="createBuildDir,genBootstrap">
		<delete dir="build/reports" />
		<mkdir dir="build/reports" />
		<mkdir dir="build/reports/tests" />
		<mkdir dir="build/reports/coverage" />
		<exec command="phpunit --configuration test/phpunit.xml 
							   --coverage-html build/reports/coverage
							   --coverage-clover build/clover-coverage.xml"
			  passthru="true" returnProperty="testsExit" />

		<if>
			<equals arg1="${testsExit}" arg2="0" />
			<then>
				<echo>Unit tests werden met success uitgevoerd.</echo>
			</then>
			<else>
				<echo>Niet alle unit tests werden succesvol uitgevoerd!</echo>
			</else>
		</if>
	</target>

	<target name="genCodeSnifferReports" description="Maak rapporten over de staat van de code aan." depends="createBuildDir">
		<delete dir="build/reports/sniffs" />
		<mkdir dir="build/reports/sniffs" />
		<exec command="phpcs --standard=PEAR ${project.basedir}/classes 
			--report-summary --report-full=${project.basedir}/build/reports/sniffs/sniffs.txt
			--report-checkstyle=${project.basedir}/build/reports/sniffs/checkstyle.xml" />
	</target>

	<target name="genDocs" description="Genereer de documentatie." depends="createBuildDir">
		<mkdir dir="build/docs/api" />
		<echo msg="De API-documentatie voor de Services wordt aangemaakt. Dit kan even duren." />
		<exec command="docblox run -d ${project.basedir}/lib/ -t ${project.basedir}/build/docs" />
	</target>

	<target name="runBuild" description="Maak een volledig build met unit tests en documentatie." depends="createBuildDir">
		<phingcall target="genTestReports" />
		<phingcall target="genCodeSnifferReports" />
		<phingcall target="genDocs" />
	</target>

</project>
